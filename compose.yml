version: '3.8'

volumes:
  db-store:

services:
  dashboard:
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile.dashboard
    restart: always
    env_file: .env
    container_name: dashboard
    volumes:
      - type: bind
        source: ./src
        target: /workspace

  dashboard-ws:
    build:
      context: .
      dockerfile: ./infra/docker/php/Dockerfile.ws
    restart: always
    env_file: .env
    container_name: dashboard-ws
    volumes:
      - type: bind
        source: ./src
        target: /workspace
    ports:
      - '6001:6001'
    networks:
      caddy_proxy:

  caddy:
    image: caddy:latest
    restart: unless-stopped
    env_file: .env
    container_name: caddy
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile
      - ./data/caddy-data:/data
      - ./data/caddy-config:/config
      - type: bind
        source: ./src
        target: /workspace
    ports:
      - target: 443
        published: 8443
        protocol: tcp
        mode: host
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
    depends_on:
      - dashboard
      - db
    networks:
      caddy_proxy:
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://caddy:2019/metrics", "||", "exit", "1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    build:
      context: .
      dockerfile: ./infra/docker/mysql/Dockerfile
    container_name: db
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: db-store
        target: /var/lib/mysql
        volume:
          nocopy: true
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-fluffici_test}
      - MYSQL_USER=${DB_USERNAME:-phper}
      - MYSQL_PASSWORD=${DB_PASSWORD:-secret}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-secret}
    networks:
      caddy_proxy:

networks:
  caddy_proxy:
    external: true
